@property --padding
{
    syntax: '<length>';
    inherits: false;
    initial-value: 2em;
}

:host
{
    container: product-list-item / inline-size;
    display: block;
}

@media screen
{
    :host > a
    {
        display: grid;
        position: relative;
        inline-size: 100%;
        color: var(--plain-fg);
    }

    :host > a::after
    {
        content: var(--price);
        display: grid;
        font-weight: 900;
    }

    :host > a .cover
    {
        display: block;
        position: relative;
        inline-size: 100%;
        block-size: 100%;
        border-radius: .5em;
        box-shadow: 0 0 1em #000;
    }

    :host > a .default-image
    {
        position: relative;
        inline-size: 100%;
        block-size: 100%;
        padding: 1em;
        border-radius: .5em;
        object-fit: contain;
    }

    :host > a .default-image[alt]:after
    {
        content: attr(alt);
        position: absolute;
        inset-inline-start: 0;
        inset-block-start: 0;
        display: grid;
        place-items: center;
        inline-size: 100%;
        block-size: 100%;
        padding: .625em;
        font-size: 1.6em;
        text-align: center;
        background: /* Dot */ radial-gradient(circle at 25% 30%, #7772, #7774 1em, transparent 1em),
            /* Dot */ radial-gradient(circle at 85% 15%, #7772, #7774 1em, transparent 1em),
            /* Bottom fade */ linear-gradient(165deg, transparent 60%, #555 60%, var(--plain-bg)),
            /* wave dark part */ radial-gradient(ellipse 52% 2.25em at .5em calc(50% - 1em), var(--plain-bg) 100%, transparent 100%),
            /* wave light part */ radial-gradient(ellipse 52% 2.25em at calc(100% - .5em) calc(50% + 1em), #555 100%, transparent 100%),
            /* Base */ linear-gradient(to bottom, var(--plain-bg) 50%, #555 50%);
        box-sizing: border-box;
    }

    :host > a > section
    {
        display: grid;
    }

    :host > a > section > .title
    {
        text-align: center;
        font-size: 1.6em;
        font-weight: bold;
    }

    @media (prefers-reduced-data: no-preference)
    {
        :host > a .default-image
        {
            background: #fff;
        }

        :host > a > section
        {
            background: linear-gradient(to top, var(--plain-bg) 50%, rgba(var(--plain-bg-rgb) / 0)),
            var(--image) top center / cover no-repeat,
            var(--plain-bg);
        }
    }

    @media (hover)
    {
        :host(:not(:hover):not(:focus-within))
        {
            z-index: 0;
        }

        :host > a:not(:hover):not(:focus-within)
        {
            transform: translateY(0);
            z-index: 0;
            will-change: transform;
        }

        :host > a:not(:hover):not(:focus-within)::after
        {
            transform: translateX(0);
            will-change: transform;
        }

        :host > a:not(:hover):not(:focus-within) .cover
        {
            transform: scale(1) translateY(0);
            will-change: transform;
        }

        :host > a:not(:hover):not(:focus-within) > section
        {
            clip-path: inset(40%);
        }

        @media (prefers-reduced-motion: no-preference)
        {
            :host
            {
                transition: z-index 0s linear .2s;
            }

            :host > a
            {
                transition: transform .2s linear .1s;
            }

            :host > a::after
            {
                transition: transform .2s linear 0s;
            }

            :host > a .cover
            {
                transition: transform .2s ease-in-out;
            }

            :host > a > section
            {
                transition: clip-path .3s ease-in-out .1s;
            }

            :host > a:is(:hover, :focus-within)
            {
                transition-delay: 0s, .3s;
            }

            :host(:focus-within)
            {
                z-index: 1;
            }

            :host(:hover)
            {
                z-index: 2;
            }

            :host > a:is(:hover, :focus-within)::after
            {
                transition-duration: .3s;
                transition-delay: .1s;
            }

            :host > a:is(:hover, :focus-within) .cover
            {
                transition-duration: .3s;
            }
        }
    }

    @container product-list-item (inline-size <= 50em)
    {
        @media screen
        {
            :host > a
            {
                grid: 100% / 100%;
                align-items: start;
                justify-items: center;
                aspect-ratio: 3 / 5;
                transform: translateY(calc(-2 * var(--padding)));
            }

            :host > a::after
            {
                position: absolute;
                right: calc(.5 * var(--padding));
                top: 0;
                place-items: center;
                inline-size: 5em;
                aspect-ratio: 2 / 1.5;
                padding-bottom: .25em;
                background-color: var(--plain-bg);
                transform: translateX(calc(1.5 * var(--padding)));
                clip-path: polygon(0 0, 100% 0, 100% 100%, 50% calc(100% - .5em), 0 100%);
                pointer-events: none;
                z-index: 2;
            }

            :host > a .cover
            {
                grid-area: 1 / 1;
                transform-origin: 50% 0;
                user-select: none;
                transform: scale(.8) translateY(calc(-4 * var(--padding)));
                z-index: 1;
            }

            :host > a > section
            {
                --offset: calc(1.5 * var(--padding));
                grid-area: 1 / 1;
                grid-template-columns: 100%;
                align-content: end;
                gap: 1.5em;
                position: relative;
                inline-size: calc(100% + (3 * var(--padding)));
                block-size: calc(100% + (4 * var(--padding)));
                padding: calc(.5 * var(--padding));
                background-color: var(--plain-bg);
                border-radius: .5em;
                transform: translate3d(0, 0, 0);
                clip-path: inset(-1em);
                box-shadow: 0 0 1em #000;
            }

            :host > a:focus-within > section
            {
                outline: 1px solid var(--plain-fg);
                outline-offset: .75em;
            }
        }
    }

    @container product-list-item (inline-size > 50em)
    {
        @media screen
        {
            :host > a
            {
                grid: 3em 1em / 5em 40em;
                grid-auto-columns: 1fr;
                grid-auto-flow: column;
                gap: 1em 2em;
            }

            :host > a .default-image
            {
                grid-area: 1 / 1 / -1 / 2;
            }

            :host > a::after
            {
                grid-area: 2 / 2;
            }

            :host > a > section
            {
                display: contents;
            }

            :host > a > section > .title
            {
                grid-area: 1 / 2;
            }

            :host > a > section > *:not(.title)
            {
                grid-row: span 2;
            }

            :host > a > section > footer
            {
                display: contents;
            }
        }
    }
}